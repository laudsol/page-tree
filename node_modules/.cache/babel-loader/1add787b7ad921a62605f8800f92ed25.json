{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var userInfoSlice = createSlice({\n  name: 'userInfo',\n  initialState: {\n    name: '',\n    email: ''\n  },\n  reducers: {\n    updateName: function updateName(state, action) {\n      console.log('name', action.payload);\n      state.name = action.payload;\n    },\n    updateEmail: function updateEmail(state, action) {\n      console.log('email', action.payload);\n      state.email = action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nvar _userInfoSlice$action = userInfoSlice.actions,\n    updateName = _userInfoSlice$action.updateName,\n    updateEmail = _userInfoSlice$action.updateEmail;\nexport { updateName, updateEmail };\nexport default userInfoSlice.reducer;","map":{"version":3,"sources":["/Users/sol/Documents/projects/react-interview-app/src/actions/userInfo.js"],"names":["createSlice","userInfoSlice","name","initialState","email","reducers","updateName","state","action","console","log","payload","updateEmail","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,aAAa,GAAGD,WAAW,CAAC;AACvCE,EAAAA,IAAI,EAAE,UADiC;AAEvCC,EAAAA,YAAY,EAAE;AACZD,IAAAA,IAAI,EAAE,EADM;AAEZE,IAAAA,KAAK,EAAE;AAFK,GAFyB;AAMvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,oBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,MAAM,CAACG,OAA1B;AACAJ,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACG,OAApB;AACH,KAJO;AAKRC,IAAAA,WAAW,EAAE,qBAACL,KAAD,EAAQC,MAAR,EAAmB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,MAAM,CAACG,OAA3B;AACAJ,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACG,OAArB;AACH;AARO;AAN6B,CAAD,CAAjC,C,CAkBP;;4BAC2CV,aAAa,CAACY,O;IAA1CP,U,yBAAAA,U;IAAYM,W,yBAAAA,W;;AAE3B,eAAeX,aAAa,CAACa,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const userInfoSlice = createSlice({\n  name: 'userInfo',\n  initialState: {\n    name: '',\n    email: ''\n  },\n  reducers: {\n    updateName: (state, action) => {\n        console.log('name',action.payload)\n        state.name = action.payload;\n    },\n    updateEmail: (state, action) => {\n        console.log('email',action.payload)\n        state.email = action.payload;\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { updateName, updateEmail } = userInfoSlice.actions\n\nexport default userInfoSlice.reducer;"]},"metadata":{},"sourceType":"module"}